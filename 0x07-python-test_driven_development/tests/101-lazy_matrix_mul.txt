===========================
The "101-lazy_matrix_mul" module
===========================

Using "lazy_matrix_mul"
------------------

Check for module docstring:
    >>> m = __import__("101-lazy_matrix_mul").__doc__
    >>> len(m) > 1
    True

Import the function from the module:
    >>> lazy_matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul

Check for function docstring:
    >>> f = __import__("101-lazy_matrix_mul").lazy_matrix_mul.__doc__
    >>> len(f) > 1
    True

Check for no args:
    >>> lazy_matrix_mul()
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

check for only one arg:
    >>> lazy_matrix_mul([[1, 2],[3, 4]])
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

check for many args:
    >>> lazy_matrix_mul([[1, 2],[3, 4]], [[5, 6], [7, 8]], [[9, 10]])
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() takes 2 positional arguments but 3 were given

check for normal multiplication with ints and floats:
    >>> lazy_matrix_mul([[1, 2],[3, 4]], [[5, 6], [7, 8]])
    array([[19, 22],
           [43, 50]])
    >>> lazy_matrix_mul([[1.5, 2.3],[3.4, 4.6]], [[5.1, 6.7], [7.7, 8.9]])
    array([[25.36, 30.52],
           [52.76, 63.72]])
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1.5, 2.5, 3.5], [4.5, 6.5, 7.5]])
    array([[10.5, 15.5, 18.5],
           [22.5, 33.5, 40.5]])

check for passing None as argument:
    >>> lazy_matrix_mul(None, [[1, 2],[3, 4]])
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported
    >>> lazy_matrix_mul([[1, 2],[3, 4]], None)
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported

check for passing non_lists a arguments:
    >>> lazy_matrix_mul(True, [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead
    >>> lazy_matrix_mul([[1, 2],[3, 4]], (1, 2, 3))
    Traceback (most recent call last):
    ValueError: shapes (2,2) and (3,) not aligned: 2 (dim 1) != 3 (dim 0)
    >>> lazy_matrix_mul("goat", False)
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

check for passing lists with non-ints and non-floats as elements:
    >>> lazy_matrix_mul([[1, "Hello"], [3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: invalid data type for einsum
    >>> lazy_matrix_mul([[1, (2, 4)], [3, 4]], [[1, False], [3, 4]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.
    >>> lazy_matrix_mul([[1, 2, 3], ["goat", True, {id: 124578}]], [[1, 2, 3], [4, 5, 6]]) 
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported
    >>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2, 3], ["goat", True, {id: 124578}]])
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported

check for passing empty lists and lists with empty rows:
    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[], []]))
    []
    >>> print(lazy_matrix_mul([[], []],[[1, 2], [3, 4]]))
    Traceback (most recent call last):
    ValueError: shapes (2,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)
    >>> lazy_matrix_mul([], [[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    ValueError: shapes (0,) and (2,3) not aligned: 0 (dim 0) != 2 (dim 0)
    >>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [])
    Traceback (most recent call last):
    ValueError: shapes (2,3) and (0,) not aligned: 3 (dim 1) != 0 (dim 0)
    >>> lazy_matrix_mul([[], [1, 2, 3]], [[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.
    >>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[3, 5, 7], []])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.

check for passing uneven lists and mismatching matrices:
    >>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.
    >>> lazy_matrix_mul([[1, 2, 4], [3, 4, 5]], [[1, 2, 5], [3, 4]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.
    >>> lazy_matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: shapes (2,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [3, 4, 5], [4, 7, 8]])
    Traceback (most recent call last):
    ValueError: shapes (2,2) and (3,3) not aligned: 2 (dim 1) != 3 (dim 0)
